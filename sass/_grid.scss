$grid-columns: 12 !default;

.grid {
  --grid-cols: #{$grid-columns};

  display: grid;
  grid-gap: var(--grid-gap, 0); 
  grid-template-columns: repeat(var(--grid-cols), 1fr); // grid of 12 flexible columns

  & > * {
    grid-column-end: span var(--grid-cols); // each grid item will full column width by default
  }
}

@for $i from 1 through $grid-columns {
    .col-#{$i}  { grid-column-end: span #{$i}; }
}

@for $i from 1 through $grid-columns {
    .col-start-#{$i} { grid-column-start: #{$i}; }
    .col-end-#{$i+1} { grid-column-end: #{$i+1}; }
}

// Responsive grid
.grid-auto-xs,
.grid-auto-sm,
.grid-auto-md,
.grid-auto-lg,
.grid-auto-xl {
  display: grid;
  grid-gap: var(--grid-gap, 0);
  grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
}
  
.grid-auto-xs { --col-min-width: 8rem; } // 80px
.grid-auto-sm { --col-min-width: 10rem; } // 100px
.grid-auto-md { --col-min-width: 15rem; } // 150px
.grid-auto-lg { --col-min-width: 20rem; } // 200px
.grid-auto-xl { --col-min-width: 25rem; } // 250px

.grid-gap-xs  { --grid-gap: var(--space-xs, 0.5rem); }
.grid-gap-sm  { --grid-gap: var(--space-sm, 0.75rem); }
.grid-gap-md  { --grid-gap: var(--space-md, 1.25rem); }
.grid-gap-lg  { --grid-gap: var(--space-lg, 2rem); }
.grid-gap-xl  { --grid-gap: var(--space-xl, 3.25rem); }
